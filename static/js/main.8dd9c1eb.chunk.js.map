{"version":3,"sources":["hooks/useLocalStorage.js","context/index.js","components/TodoItem/index.jsx","components/TodoCounter/index.jsx","components/TodoList/index.jsx","components/TodoSearch/index.jsx","components/CreateTodoButton/index.jsx","components/Modal/index.jsx","components/TodoForm/index.jsx","components/TodoMachine/index.js","App/index.js","index.js"],"names":["useLocalStorage","itemName","initialValue","useState","loading","setLoading","error","setError","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","TodoContext","createContext","TodoProvider","props","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","text","toLowerCase","includes","Provider","value","addTodo","newTodos","push","completeTodos","todoText","todoIndex","findIndex","console","log","deleteTodos","splice","children","TodoItem","className","onClick","onComplete","onDelete","TodoCounter","useContext","TodoList","TodoSearch","type","placeholder","name","onChange","e","target","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","TodoMachine","map","App","render"],"mappings":"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","file":"static/js/main.8dd9c1eb.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\n\nconst useLocalStorage = (itemName, initialValue) => {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [item, setItem] = useState(initialValue);\n  \n  useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName)\n        let parsedItem\n        \n        if(!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue))\n          parsedItem = initialValue\n        }else {\n          parsedItem = JSON.parse(localStorageItem)\n        }\n  \n        setItem(parsedItem)\n        setLoading(false)\n      } catch (error) {\n        setError(error)\n      }\n    }, 1000);\n  })\n  \n  const saveItem = (newItem) => {\n    try {\n      localStorage.setItem(itemName, JSON.stringify(newItem))\n      setItem(newItem)\n    } catch (error) {\n      setError(error)\n    }\n  }\n\n  return { item, saveItem, loading, error }\n}\n\nexport default useLocalStorage","import React, { createContext, useState } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst TodoContext = createContext()\n\nconst TodoProvider = (props) => {\n\n  const { item:todos, saveItem:saveTodos, loading, error } = useLocalStorage('TODOS_V1', [])\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false)\n\n  const completedTodos = todos.filter((todo) => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length > 0) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) =>\n      todo.text.toLowerCase().includes(searchValue.toLowerCase())\n    );\n  }\n\n  const addTodo = (text) => {\n    const newTodos = [...todos]\n    newTodos.push({\n      completed: false,\n      text\n    })\n    saveTodos(newTodos)\n  }\n\n  const completeTodos = (todoText) => {\n    const todoIndex = todos.findIndex(todo => todo.text === todoText)\n    console.log(todoIndex)\n    const newTodos = [...todos]\n    newTodos[todoIndex].completed = true\n    saveTodos(newTodos)\n  }\n\n  const deleteTodos = (todoText) => {\n    const todoIndex = todos.findIndex(todo => todo.text === todoText)\n    const newTodos = [...todos]\n    newTodos.splice(todoIndex, 1)\n    saveTodos(newTodos)\n  }\n\n  return (\n    <TodoContext.Provider value={{\n      loading,\n      error,\n      searchValue,\n      setSearchValue,\n      completedTodos,\n      totalTodos,\n      searchedTodos,\n      addTodo,\n      completeTodos,\n      deleteTodos,\n      openModal,\n      setOpenModal,\n    }}>\n      {props.children}\n    </TodoContext.Provider>\n  )\n}\n\nexport { TodoContext, TodoProvider }","import React from \"react\";\nimport \"./TodoItem.css\";\n\nexport const TodoItem = (props) => {\n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && \"Icon-check--active\"}`}\n        onClick={props.onComplete}\n      >\n        âˆš\n      </span>\n      <p className={`TodoItem-p ${props.completed && \"TodoItem-p--complete\"}`}>\n        {props.text}\n      </p>\n      <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\n        X\n      </span>\n    </li>\n  );\n};\n","import React, { useContext } from 'react'\nimport { TodoContext } from '../../context'\nimport './TodoCounter.css'\n\nexport const TodoCounter = () => {\n  const {totalTodos, completedTodos} = useContext(TodoContext)\n  return (\n    <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n  )\n}\n","import React from 'react'\nimport './TodoList.css'\n\nexport const TodoList = ( props ) => {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  )\n}\n","import React, { useContext } from \"react\";\nimport { TodoContext } from \"../../context\";\nimport \"./TodoSearch.css\";\n\nexport const TodoSearch = () => {\n  const {searchValue, setSearchValue} = useContext(TodoContext)\n\n  const onSearchValueChange = (e) => {\n    setSearchValue(e.target.value)\n    console.log(searchValue);\n  };\n  return (\n    <input\n      type=\"text\"\n      className=\"TodoSearch\"\n      placeholder=\"Cebolla\"\n      name=\"searchValue\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport { TodoContext } from \"../../context\";\nimport \"./CreateTodoButton.css\";\n\nexport const CreateTodoButton = () => {\n  const { openModal, setOpenModal } = useContext(TodoContext);\n  const onClickButon = () => {\n    setOpenModal(prevState => !prevState)\n  };\n  return (\n    <button\n      className={openModal ? \"CreateTodoButton CreateTodoButton-active\" : 'CreateTodoButton'}\n      onClick={() => onClickButon()}\n    >\n      +\n    </button>\n  );\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './Modal.css'\n\nexport const Modal = ({children}) => {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">\n      {children}\n    </div>,\n    document.getElementById('modal')\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { TodoContext } from '../../context'\nimport './TodoForm.css'\n\nexport const TodoForm = () => {\n  const { addTodo,setOpenModal } = useContext(TodoContext)\n\n  const [newTodoValue, setNewTodoValue] = useState(\"\")\n\n  const onChange = (e) => {\n    setNewTodoValue(e.target.value)\n  }\n  \n  const onCancel = () => {\n    setNewTodoValue('')\n    setOpenModal(prevState => !prevState)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    addTodo(newTodoValue)\n    setOpenModal(prevState => !prevState)\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>Escribe tu nuevo TODO</label>\n      <textarea placeholder='Cortar la ceebolla para el almuerzo' value={newTodoValue} onChange={onChange}></textarea>\n      <div className=\"TodoForm-buttonContainer\">\n        <button className=\"TodoForm-button TodoForm-button-cancel\" type=\"button\" onClick={onCancel}>Cancelar</button>\n        <button className=\"TodoForm-button TodoForm-button-add\" type=\"submit\">AÃ±adir</button>\n      </div>\n    </form>\n  )\n}\n","import React, { useContext } from \"react\";\nimport { TodoContext } from \"../../context\";\nimport { TodoItem } from \"../TodoItem\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { Modal } from \"../Modal\";\nimport { TodoForm } from \"../TodoForm\";\n\nexport const TodoMachine = () => {\n  const { error, loading, searchedTodos, completeTodos, deleteTodos, openModal } =\n    useContext(TodoContext);\n  return (\n    <>\n      <TodoCounter />\n\n      <TodoSearch />\n\n      <TodoList>\n        {error && <p>Desesperate, hubo un error...</p>}\n        {loading && <p>Estamos cargando, no te desesperes...</p>}\n        {!loading && !searchedTodos.length && <p>Crea tu primer TODO</p>}\n\n        {searchedTodos.map((todo) => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodos(todo.text)}\n            onDelete={() => deleteTodos(todo.text)}\n          />\n        ))}\n      </TodoList>\n      {\n        openModal && (\n          <Modal>\n            <TodoForm />\n          </Modal>\n        )\n      }\n\n      <CreateTodoButton/>\n    </>\n  );\n};\n","import { TodoMachine } from \"../components/TodoMachine\";\nimport { TodoProvider } from \"../context\";\nimport \"./App.css\";\n\n// const defaultTodos = [\n//   { text: \"Cortar cebolla\", completed: true },\n//   { text: \"Tomar curso de motivacion\", completed: false },\n//   { text: \"Llorar con la llorona\", completed: false },\n//   { text: \"Ver naruto\", completed: true },\n// ];\nfunction App() {\n\n  return (\n    <TodoProvider>\n      <TodoMachine />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}